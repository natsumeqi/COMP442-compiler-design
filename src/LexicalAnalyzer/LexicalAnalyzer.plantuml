@startuml

title __LEXICALANALYZER's Class Diagram__\n

  namespace LexicalAnalyzer {
    class LexicalAnalyzer.LexicalAnalyzer {
        - backup_char : Character
        - curr_lexeme : StringBuilder
        - curr_line : int
        - curr_state : int
        - input_char : char
        - is_finished : boolean
        - lookup_char : char
        - out_line : int
        - reader : BufferedReader
        {static} - transition_table : State[]
        - writer_err : PrintWriter
        - writer_tok : PrintWriter
        + LexicalAnalyzer()
        + createTable()
        + createToken()
        + fileIOClose()
        + fileIOSetup()
        + isFinished()
        + lookupTable()
        + nextChar()
        + nextToken()
        + writeToBuffers()
        - add_transitions()
        - initialToInput()
        - setFinalState()
        - setNonFinalState()
    }
  }
  

  namespace LexicalAnalyzer {
    class LexicalAnalyzer.LexicalAnalyzerDriver {
        {static} + main()
        {static} ~ LexicalAnalyzerOneFile()
    }
  }
  

  namespace LexicalAnalyzer {
    class LexicalAnalyzer.State {
        - backtrack : boolean
        - curr_state : int
        - is_final : boolean
        - state_name : String
        - transitions : Map<Character, Integer>
        + State()
        + State()
        + add_transition()
        + getCurrState()
        + getState_name()
        + getTransitions()
        + isBacktrack()
        + isFinalState()
        + isIs_final()
        + setBacktrack()
        + setIs_final()
        + setState_name()
    }
  }
  

  namespace LexicalAnalyzer {
    class LexicalAnalyzer.Token {
        - is_error : boolean
        - lexeme : String
        - location : int
        - type : String
        + Token()
        + getLexeme()
        + getLocation()
        + getType()
        + isError()
        + setIs_error()
        + setLexeme()
        + setLocation()
        + setType()
        + toString()
    }
  }
  
LexicalAnalyzer.LexicalAnalyzerDriver -right-> LexicalAnalyzer.LexicalAnalyzer
  LexicalAnalyzer.LexicalAnalyzer o-- LexicalAnalyzer.Token : curr_token
    LexicalAnalyzer.LexicalAnalyzer -right-> LexicalAnalyzer.State

right footer



endfooter

@enduml
